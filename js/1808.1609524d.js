"use strict";(self["define"]=self["define"]||[]).push([[1808],{86022:function(e,t,r){r(21703);const o=(e,t)=>Math.floor(Math.random()*(t-e+1)+e),a=()=>{const e=new Error("Delay aborted");return e.name="AbortError",e},n=({clearTimeout:e,setTimeout:t,willResolve:r})=>(o,{value:n,signal:l}={})=>{if(l&&l.aborted)return Promise.reject(a());let s,i,c;const u=e||clearTimeout,d=()=>{u(s),c(a())},f=()=>{l&&l.removeEventListener("abort",d)},m=new Promise(((e,a)=>{i=()=>{f(),r?e(n):a(n)},c=a,s=(t||setTimeout)(i,o)}));return l&&l.addEventListener("abort",d,{once:!0}),m.clear=()=>{u(s),s=null,i()},m},l=e=>{const t=n({...e,willResolve:!0});return t.reject=n({...e,willResolve:!1}),t.range=(e,r,a)=>t(o(e,r),a),t},s=l();s.createWithTimers=l,e.exports=s,e.exports["default"]=s},21808:function(e,t,r){r.r(t);var o=r(86022),a=r.n(o);class n{constructor(){console.info("DEBUG-SYNC: created")}async info(){return{user:"debug",name:"debug",avatar:"",storage:[0,0]}}async set(e,t,{localLast:r,localNow:o}){return await a()(100),console.info("DEBUG-SYNC: set",e,t,{localLast:r,localNow:o}),{value:t,lastModified:o}}async get(e){return console.info("DEBUG-SYNC: get",e),await a()(100),{value:null,lastModified:new Date(0)}}async loadAll(){return{}}}t["default"]=n}}]);